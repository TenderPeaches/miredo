<%= model_form_with model: progression, url: progression.new_record? ? progressions_path(song_id: progression.song.id) : progression_path(id: progression.id, song_id: progression.song.id), class: "song-progression-form", id: "#{dom_id(progression)}__form" do |form| %>
    <%= render "progressions/errors", progression: progression %>
    <%= tag.div class: "template-cypher-print" do %>
        <%= tag.div "#{progression.progression_template.print(song.key, song.scale)}" %>
    <% end %>
    <%= render "progressions/fields", form: form %>

    <%# if uid local variable assigned, create a hidden field so that the controller can target this form in its response %>
    <% if defined? uid %>
        <%= form.hidden_field :uid, value: uid.to_s %>
    <% end %>

    <%= form.hidden_field :song_id, value: song.id %>

    <% unless progression.new_record? %>
        <%= turbo_link_button t('actions.copy', thing: t('activerecord.models.progression')), new_progression_path(progression_id: progression.id) %>
        <%= link_to t('actions.delete', thing: t('activerecord.models.progression')), progression_path(progression.id), class: "button button--alert", data: { turbo_method: :delete, turbo_confirm: t('confirm.delete', model: progression.tag) } %>
    <% end %>

    <% if progression.id == nil %>
        <%= form.submit t('actions.create', thing: t('activerecord.models.progression')) %>
        <%= form.submit t('actions.create', thing: t('keywords.another')), name: :create_another %>
    <% else %>
        <%= form.submit t('actions.update', thing: t('activerecord.models.progression')) %>
    <% end %>
<% end %>
