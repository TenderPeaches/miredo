/* _common.css => for common classes that aren't tied to one specific page or feature */

/* main application content viewport, occupies most of the screen */
.content {
    padding: var(--size-xxl) calc(2 * var(--size-xxxl));    /* large padding for large screens */
    text-align: center;
}

/* class added to elements that need to be hidden from the layout */
.hidden {
    display: none !important;   /*! maybe only acceptable use of !important, but should still look to see if really necessary */
}

/* class added to elements that need to clash with the surrounding content */
.contrast-text {
    color: var(--color-accent-light);                       /* clash with text (by not using secondary color) and background (by not using primary) */
}

/* fields used within a typical form */
.form-fields {
    display: grid;                                          /* to allow for a uniform display between each field */
    margin: var(--size-l);                                  /* spacing around */
    padding: var(--size-l);                                 /* spacing within */
    grid-template-columns: 1fr 3fr;                         /* 1 frame for the label, 3 frames for the field itself */
    row-gap: var(--size-s);                                 /* additional spacing between each field */
  }

/* generic button */
.button,
input[type="submit"] {
    display: inline-block;                                  /* occupy a block */
    cursor: pointer;                                        /* standard */
    padding: var(--size-s);                                 /* inner spacing */
    margin: var(--size-m);                                  /* outer spacing */
    border-width: var(--thick-border-width);                /* let the border pop */
    border-style: var(--button-border-style);               /* standard */
    transition-duration: var(--quick-duration);             /* standard */
    text-align: center;                                     /* standard */
    font-size: 1.2rem;
    text-decoration: none;
}

.button {
    background-color: var(--color-primary-darkest);
    border-color: var(---color-primary-white);              /* highlight against dark background */
    color: var(--color-primary-white);
}

.button--square {
    display: inline-block;                                  /* force inline-block display, otherwise flex will change the dimensions */
    padding: 0;                                             /* set dimensions manually, remove padding for easier calculations */
    width: var(--size-xl);                                  /* ensure same size as height */
    height: var(--size-xl);                                 /* ensure same size as width */
    flex-direction: column;                                 /* center vertically */
    justify-content: center;                                /* center vertically */
}

/* generic clickable element */ 
.clickable {
    cursor: pointer;                                        /* standard */
    border-color: transparent;                              /* prevent element size from changing when border is not shown */
    border-width: var(--default-border-size);               /* simple border */
    border-style: var(--button-border-style);               /* standard */

    transition-duration: var(--quick-duration);
}

/* generic clickable disabled element */
.clickable--disabled {
    border-color: var(--color-disabled);
    background-color: var(--color-disabled-dark);
    color: var(--color-disabled);
    pointer-events: none;
}

.clickable:hover,
.button:hover {
    border-style: outset;
    border-color: var(--color-primary-light);
    background: var(--color-primary);
    color: var(--color-primary-black);
}

.clickable:active,
.button:active {
    background: var(--color-primary-darkest);
}

.button--alert {
    background-color: var(--color-error);
    border-color: var(--color-white);
    color: var(--color-white);
}

.button--alert:hover {
    background-color: var(--color-white);
    border-color: var(--color-error);
    color: var(--color-error);
}

.button--alert:active {
    background-color: var(--color-error-light);
}

input[type="submit"] {
    border-color: var(--color-accent-white);
    background: var(--color-accent-darkest);
    color: var(--color-accent-white);
}

input[type="submit"]:hover {
    background: var(--color-accent);
    color: var(--color-accent-black);
}
  
input[type="submit"]:active {
    background: var(--color-accent-darker);
}
  
.card {
    margin: var(--size-m);
    padding: var(--size-m);
}

.text-secondary {
    color: var(--color-secondary-lightest);
}

.bg-secondary {
    background: var(--color-secondary-darkest);
}

.text-accent {
    color: var(--color-accent-lightest);
}

.bg-accent {
    background: var(--color-accent-darkest);
}

/* x-axis centered flex */
.flex-x {
    display: flex;
    justify-content: space-between;
    align-items: center;
}


/* screen-size dependent considerations */
/* for large screens */
@media screen and (min-width: 1080px) {
    .content {
        max-width: var(--max-content-width--large-screen);  /* prevent the content from spreading over too wide an area */
        padding: calc(4 * var(--size-xxl)) calc(2 * var(--size-xxxl));    /* large padding for large screens */
        margin: auto;           /* center horizontally */ 
    }
 }